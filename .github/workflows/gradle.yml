name: Backend CI/CD

on:
  workflow_dispatch:
  
  pull_request:
    branches: [ develop ]
    paths: backend/**

permissions:
  pull-requests: write
  checks: write
  contents: write
  
jobs:
  build-and-upload:

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: gradlew 실행 권한 부여
      run: chmod +x gradlew
      working-directory: backend

    - name: Gradle build 시작
      run: ./gradlew clean build
      working-directory: backend

    - name: 테스트 결과를 PR에 코멘트로 등록합니다
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: 'backend/build/test-results/test/TEST-*.xml'

    - name: 테스트 실패 시, 실패한 코드 라인에 Check 코멘트를 등록합니다
      uses: mikepenz/action-junit-report@v3
      if: always()
      with:
        report_paths: '**/build/test-results/test/TEST-*.xml'
        token: ${{ github.token }}
        
    - name: jar 파일 artifact에 업로드
      uses: actions/upload-artifact@v3
      with:
        name: BackendApplication
        path: backend/build/libs/*.jar

  deploy:
    runs-on: self-hosted
    needs: build-and-upload
    steps:
      - name: 구버전 jar 파일 삭제
        run: rm -rf /home/ubuntu/backend/build/*.jar 

      - name: jar파일 artifact에서 다운로드
        uses: actions/download-artifact@v3 
        with:
          name: BackendApplication
          path: /home/ubuntu/backend/build/

      - name: 배포하기
        run: /home/ubuntu/backend/build/deploy.sh

      - name: 슬랙 메시지 보내기  // secrets 키 설정만 하면 됨 
        uses: 8398a7/action-slack@v3
        with:
          mention: 'here'
          if_mention: always
          status: ${{ job.status }}
          fields: workflow,job,commit,message,ref,author,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
